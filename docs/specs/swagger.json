{"openapi":"3.0.1","info":{"title":"'presentation'","description":"'This Spring Boot application is a demonstration of modern API development practices, showcasing concepts such as JUnit testing, separation of concerns, design patterns, and API contract design. The application features a well-documented API, accessible via Swagger UI at http://localhost:8080/swagger-ui/index.html#/ (This can be changed on the application.properties file), providing detailed information on available endpoints and models. It includes endpoints for player management, match tracking, and user authentication, all designed to adhere to best practices in API design and implementation'","contact":{"name":"Leonardo","email":"leonardoluiten@gmail.com"},"version":"'0.0.1-SNAPSHOT'"},"servers":[{"url":"http://localhost:8080","description":"'This Spring Boot application is a demonstration of modern API development practices, showcasing concepts such as JUnit testing, separation of concerns, design patterns, and API contract design. The application features a well-documented API, accessible via Swagger UI at http://localhost:8080/swagger-ui/index.html#/ (This can be changed on the application.properties file), providing detailed information on available endpoints and models. It includes endpoints for player management, match tracking, and user authentication, all designed to adhere to best practices in API design and implementation'"}],"paths":{"/players":{"post":{"tags":["player-controller"],"summary":"Create a new player","description":"Return the player created with your id. If a player matching the username or email exists, then it will return 404. Additionally, the email must be valid and the password must have at least 8 characters while containing at least one number  one lowercase letter, one uppercase letter and one special character","operationId":"savePlayer","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Player"}}},"required":true},"responses":{"500":{"description":"Internal server error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorApi"}}}},"200":{"description":"Successful operation","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Player"}}}},"400":{"description":"Username or email already exists","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorApi"}}}}}}},"/matches":{"post":{"tags":["match-controller"],"operationId":"saveMatch","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MatchDTO"}}},"required":true},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Match"}}}}}}},"/login":{"post":{"tags":["login-controller"],"summary":"Login a player on the platform","description":"Returns the player logged in if the credentials are valid","operationId":"loginPlayer","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Credential"}}},"required":true},"responses":{"500":{"description":"Internal server error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorApi"}}}},"200":{"description":"Successful operation","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Player"}}}},"404":{"description":"The credentials are invalid","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorApi"}}}}}}},"/login/v2":{"post":{"tags":["login-controller"],"summary":"Login a player on the platform","description":"Returns the player logged in if the credentials are valid","operationId":"loginPlayer_1","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CredentialV2"}}},"required":true},"responses":{"500":{"description":"Internal server error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorApi"}}}},"200":{"description":"Successful operation","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Player"}}}},"404":{"description":"The credentials are invalid","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorApi"}}}}}}},"/players/{id}":{"get":{"tags":["player-controller"],"summary":"Gets a player by its id.","description":"Returns either a matching Player or a 404 status code error.","operationId":"getById","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"500":{"description":"Internal server error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorApi"}}}},"200":{"description":"Successful operation","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Player"}}}},"404":{"description":"Not found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorApi"}}}}}}},"/players/{id}/matches":{"get":{"tags":["player-controller"],"summary":"Get matches of a player","description":"Returns a list of matches associated with a specific player based on their ID. If the player does not exist, it will return a 404 error.","operationId":"getMatchesOfPlayer","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"500":{"description":"Internal server error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorApi"}}}},"200":{"description":"Successful operation","content":{"*/*":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Match"}}}}},"404":{"description":"Player not found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorApi"}}}}}}},"/ping":{"get":{"tags":["ping-controller"],"summary":"Check for the availability of the app","description":"If the app is running, then the response should be 'pong'","operationId":"pong","responses":{"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ErrorApi"}}}},"200":{"description":"Successful operation","content":{"*/*":{"schema":{"type":"string"}}}}}}}},"components":{"schemas":{"Player":{"required":["email","password","userName"],"type":"object","properties":{"id":{"title":"Player'S ID","type":"integer","description":"An unique value for identifying the player","format":"int64","example":1},"userName":{"title":"Player's user name","type":"string","description":"The player's name that will be displayed to other users","example":"FeelzGood"},"password":{"title":"Player's password","type":"string","description":"The password for login in","example":"Password#03"},"email":{"title":"Player's email address","type":"string","description":"The email account for recovering the password and receiving notifications","example":"email@email.com"},"avatar":{"title":"Player's avatar url","type":"string","description":"The url for the customizable avatar to show in game","nullable":true,"example":"https://localhost:8080/avatars/myUsername"},"lastLogin":{"title":"Player's last login date","type":"string","description":"States the last registered player's login date","format":"date-time","nullable":true}}},"ErrorApi":{"type":"object","properties":{"timestamp":{"type":"string"},"status":{"type":"integer","format":"int32"},"error":{"type":"string"},"message":{"type":"string"}}},"MatchDTO":{"required":["gameId","playerId"],"type":"object","properties":{"gameId":{"type":"integer","format":"int64"},"playerId":{"type":"integer","format":"int64"}}},"Game":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"game":{"type":"string"},"player":{"type":"string"},"createdDate":{"type":"string"},"status":{"type":"string"}}},"Match":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"game":{"$ref":"#/components/schemas/Game"},"player":{"$ref":"#/components/schemas/Player"},"createdDate":{"type":"string","format":"date-time"},"status":{"type":"string","enum":["STARTED","FINISHED","CANCELED"]}}},"Credential":{"type":"object","properties":{"identity":{"oneOf":[{"$ref":"#/components/schemas/EmailIdentity"},{"$ref":"#/components/schemas/UserNameIdentity"}]},"password":{"type":"string"}}},"EmailIdentity":{"required":["email","identity_type"],"type":"object","allOf":[{"$ref":"#/components/schemas/Identity"},{"type":"object","properties":{"email":{"title":"Email to log in","type":"string","description":"The email address used to log in. This must be a valid email address.","example":"email@example.com"}}}]},"Identity":{"required":["identity_type"],"type":"object","properties":{"identity_type":{"title":"Type of identity used to log in","type":"string","description":"The type of credential provided to log in, such as USERNAME or EMAIL","example":"USERNAME or EMAIL","enum":["USERNAME","EMAIL"]}},"discriminator":{"propertyName":"identity_type"}},"UserNameIdentity":{"required":["identity_type","user_name"],"type":"object","allOf":[{"$ref":"#/components/schemas/Identity"},{"type":"object","properties":{"user_name":{"title":"Username to log in","type":"string","description":"The username used for authentication. This must be a unique identifier chosen by the user.","example":"john_doe"}}}]},"CredentialV2":{"required":["identity","password"],"type":"object","properties":{"password":{"type":"string"},"identity":{"title":"Email or UserName to log in","type":"string","description":"The player email or username","example":"email@email.com or username"}}}}}}